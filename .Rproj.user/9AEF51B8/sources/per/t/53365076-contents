modelText = "
# Measurement Model

item1 ~ A1
item2 ~ A2
item3 ~ A3
item4 ~ A1 + A2 + A1:A2
item5 ~ A1 + A3 + A1:A3
item6 ~ A2 + A3 + A2:A3
item7 ~ A1 + A2 + A3 + A1:A2 + A1:A3 + A2:A3 + A1:A2:A3

# Structural Model
A1 ~ 1
A2 ~ A1
A3 ~ A1 + A2 + A1:A2

# Latent Variable Specifications:
A1 A2 A3 <- latent(unit = 'rows', distribution = 'bernoulli', structure = 'univariate', type = 'ordinal')

# Observed Variable Specifications:
item1-item7 <- observed(distribution = 'bernoulli', link = 'probit')
"

simulatedData = blatentSimulate(modelText = modelText, nObs = 1000,
                                defaultSimulatedParameters = setDefaultSimulatedParameters(
                                  observedIntercepts = "runif(n = 1, min = -1, max = -1)",
                                  observedMainEffects = "runif(n = 1, min = 2, max = 2)",
                                  observedInteractions = "runif(n = 1, min = 0, max = 0)",
                                  latentIntercepts = "runif(n = 1, min = 0, max = 0)",
                                  latentMainEffects  = "runif(n = 1, min = 0, max = 0)",
                                  latentInteractions = "runif(n = 1, min = 0, max = 0)"
                                ), seed = 110)

model01 = blatentEstimate(
  dataMat = simulatedData$data,
  modelText = modelText,
  options = blatentControl(
    seed = 10072019,
    parallel = FALSE,
    nChains = 2,
    nBurnin = 1000,
    nSampled = 1000,
    nThin = 5,
    nCores = 0
  )
)

